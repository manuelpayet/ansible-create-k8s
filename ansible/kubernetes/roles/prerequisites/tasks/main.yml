- name: "create predownload folder if it doesn't exist"
  file: 
    state: directory
    path: "{{binaries_predownload}}"
  
-   name: "prepare download folder"
    file:
        state: directory
        path: "{{binaries}}"
        
- name: "copy predownloaded files"
  synchronize:
    src: "{{binaries_predownload}}"
    dest: "{{binaries}}"
    recursive: true


- name: "prepare etcd download folder"
  file:
      state: directory
      path: "{{binaries_etcd}}"

- name: download etcd binaries
  shell: |
    wget -O {{binaries_etcd}}/etcd.tar.gz https://github.com/etcd-io/etcd/releases/download/v3.4.5/etcd-v3.4.5-linux-amd64.tar.gz
  args:
    creates: "{{binaries_etcd}}/etcd.tar.gz"
  

- name: "prepare kubernetes server download folder"
  file:
    state: directory
    path: "{{binaries_k8s_server}}"
  
- name: download kubernetes server binaries
  shell: |
    wget -O {{binaries_k8s_server}}/kubernetes-server-linux-amd64.tar.gz https://dl.k8s.io/v1.17.0/kubernetes-server-linux-amd64.tar.gz
  args:
    creates: "{{binaries_k8s_server}}/kubernetes-server-linux-amd64.tar.gz"

- name: "prepare kubernetes node download folder"
  file:
    state: directory
    path: "{{binaries_k8s_client}}"

- name: download kubernetes node binaries
  shell: |
    wget -O {{binaries_k8s_client}}/kubernetes-node-linux-amd64.tar.gz wget https://dl.k8s.io/v1.17.0/kubernetes-node-linux-amd64.tar.gz
  args:
    creates: "{{binaries_k8s_client}}/kubernetes-node-linux-amd64.tar.gz"
  