- name: install kube-controller-manager
  unarchive:
      src: "{{binaries_k8s_server}}/kubernetes-server-linux-amd64.tar.gz" 
      copy: true
      dest: "{{kube_install}}/bin" 
      owner: kubernetes 
      extra_opts:  
        - --strip=3
        - --wildcards
        - '*/kube-controller-manager'
  become: yes


- name: copy kubernetes controller manager kubeconfig
  template:
    src: "templates/kubeconfig.yml.j2"
    dest: "{{kube_install}}/etc/controller-manager-kubeconfig.yml"
  vars:
    client_certificate: "{{kube_certs}}/kube-controller-manager.pem"
    client_key: "{{kube_certs}}/kube-controller-manager-key.pem"
  register: kube_controller_manager_service_create
  become: yes


- name: create kubernetes controller manager systemd service
  template:
    src: "templates/kube-controller-manager.service.j2"
    dest: "/etc/systemd/system/kube-controller-manager.service"
  register: kube_controller_manager_service_create
  become: yes


- name: reload systemd configuration
  systemd:
    daemon_reload: yes
  when: kube_controller_manager_service_create.changed
  become: yes

- name: activate kubernetes controller manager service on startup
  systemd:
    name: kube-controller-manager.service
    enabled: yes
  become: yes

- name: start Kubernetes API Server service
  systemd:
    name: kube-controller-manager.service
    state: started
  become: yes

- name: wait for kube-controller-manager service to be started
  service_facts:
  until: ansible_facts.services['kube-controller-manager.service'].state == 'running'
  retries: 10
  delay: 2

