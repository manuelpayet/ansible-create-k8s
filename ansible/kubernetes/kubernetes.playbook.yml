- hosts: localhost
  tasks:
    - shell: "ping -q {{item}} -c1 | head -n1 | egrep -o '([0-9]{1,3}\\.){3}[0-9]{1,3}'"
      register: ip_resolution_command
      loop: "{{groups.all}}"
      changed_when: "False" #don't consider the ip collection as a change

    - name: collect ip per host as resolved by local machine
      set_fact: 
        ip_for_host: "{{ip_for_host| default({}) | combine ( {item.item: item.stdout} ) }}"
      with_items: "{{ip_resolution_command.results}}"
  tags:
    - always

        
- hosts: localhost
  vars_files:
  - group_vars/all.yml
  
  vars:
    workers_in_inventory: "{{groups.kubeworker}}"
    masters_in_inventory: "{{groups.kubemaster}}"
    ip_for_host: "{{ip_for_host}}"
  tasks:
    - include_role: 
        name: prerequisites
    - include_role: 
        name: certificate-authority
  tags:
    - certificates

- hosts: kubemaster
  tasks:
    - include_role:
        name: etcd
  vars: 
    ip_for_host: "{{hostvars['localhost']['ip_for_host']}}"
    masters_in_inventory: "{{groups.kubemaster}}"

- hosts: kubemaster
  tasks:
    - include_role:
        name: kube-master
  vars: 
    ip_for_host: "{{hostvars['localhost']['ip_for_host']}}"
    masters_in_inventory: "{{groups.kubemaster}}"
    bootstrap_token: "{{ lookup('password', '/tmp/passwordfile chars=ascii_letters,digits,hexdigits,punctuation') | b64encode}}"
  tags: 
    - kubemaster